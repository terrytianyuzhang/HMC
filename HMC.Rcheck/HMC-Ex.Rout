
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "HMC"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "HMC-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('HMC')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("anchored_lasso_testing")
> ### * anchored_lasso_testing
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: anchored_lasso_testing
> ### Title: Simple plug-in test for two-sample mean comparison.
> ### Aliases: anchored_lasso_testing
> 
> ### ** Examples
> 
> sample_size_1 <- sample_size_2 <- 300
> true_mean_1 <- matrix(c(rep(1, 10), rep(0, 90)), ncol = 1)
> true_mean_2 <- matrix(c(rep(1.5, 10), rep(0, 90)), ncol = 1)
> 
> sample_1 <- data.frame(MASS::mvrnorm(sample_size_1,
+                                mu = true_mean_1,
+                                Sigma = diag(1, 100)))
>  sample_2 <- data.frame(MASS::mvrnorm(sample_size_2,
+                                mu = true_mean_2,
+                                Sigma = diag(1, 100)))
>  result <- anchored_lasso_testing(sample_1, sample_2)
[1] "processiong fold 1"
 Fold  1  out of  5 
 Fold  2  out of  5 
 Fold  3  out of  5 
 Fold  4  out of  5 
 Fold  5  out of  5 

[1] 1.2
1234567891011121314151617181920
[1] 0.9014397
[1] "bingo"
[1] "processiong fold 2"
[1] 1.2
1234567891011121314151617181920
[1] 0.9241627
[1] "bingo"
[1] "processiong fold 3"
[1] 1.2
1234567891011121314151617181920
[1] 0.8515139
[1] "bingo"
[1] "processiong fold 4"
[1] 1.2
123
[1] 1.061808
[1] "bingo"
[1] "processiong fold 5"
[1] 1.2
1234567891011121314151617181920
[1] 0.8707775
[1] "bingo"
     [,1]
[1,]    1
          [,1]
[1,] 0.9742058
          [,1]
[1,] 0.9836063
          [,1]
[1,] 0.9733178
          [,1]
[1,] 0.9669457
>  result$test_statistics
         [,1]
[1,] 18.79583
>  ##the test statistic. It should follow normal(0,1) when there is no difference between the groups.
>  summarize_feature_name(result) 
 [1] "X1"  "X10" "X2"  "X3"  "X4"  "X44" "X5"  "X51" "X6"  "X7"  "X78" "X8" 
[13] "X9"  "X91"
>  #summarize which features contribute to discriminant vectors (i.e. logistic lasso)
>  extract_pc(result) # extract the estimated discriminant coefficients
[[1]]
  [1]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
  [7]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [13]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [19]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [25]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [31]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [37]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [43]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [49]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [55] -0.9741657  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [61]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [67]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [73]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [79]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [85]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [91]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [97] -0.2258342  0.0000000  0.0000000  0.0000000

[[2]]
  [1]  0.00000000  0.20601752  0.00000000  0.00000000  0.00000000  0.00000000
  [7]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [13]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [19]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [25]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [31]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [37]  0.00000000 -0.97842462  0.00000000  0.00000000  0.00000000  0.00000000
 [43]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [49]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [55]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [61]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [67]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [73]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [79]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [85]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [91]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [97]  0.00000000  0.00000000  0.00000000 -0.01555784

[[3]]
  [1]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
  [7]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [13]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [19]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [25]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [31]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [37]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [43]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [49]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [55]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [61]  0.00000000  0.00000000  0.00000000 -0.20032733  0.00000000  0.00000000
 [67]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000 -0.02015091
 [73]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [79]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [85]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000 -0.97952177
 [91]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [97]  0.00000000  0.00000000  0.00000000  0.00000000

[[4]]
  [1]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
  [7]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [13]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [19]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [25]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [31]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [37]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [43] -0.2258343  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [49]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [55]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [61]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [67]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [73]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [79]  0.9741657  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [85]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [91]  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000  0.0000000
 [97]  0.0000000  0.0000000  0.0000000  0.0000000

[[5]]
  [1]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
  [7]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.04130007
 [13]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [19]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [25]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [31]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [37]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [43]  0.98370225  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [49]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [55]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [61]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [67]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [73]  0.00000000 -0.17499767  0.00000000  0.00000000  0.00000000  0.00000000
 [79]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [85]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [91]  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000  0.00000000
 [97]  0.00000000  0.00000000  0.00000000  0.00000000

>  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("anchored_lasso_testing", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("debiased_pc_testing")
> ### * debiased_pc_testing
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: debiased_pc_testing
> ### Title: Debiased one-step test for two-sample mean comparison. A small
> ###   p-value tells us not only there is difference in the mean vectors,
> ###   but can also indicates which principle component the difference
> ###   aligns with.
> ### Aliases: debiased_pc_testing
> 
> ### ** Examples
> 
> sample_size_1 <- sample_size_2 <- 300
> 
> true_mean_1 <- matrix(c(rep(1, 10), rep(0, 90)), ncol = 1)
> true_mean_2 <- matrix(c(rep(1.5, 10), rep(0, 90)), ncol = 1)
> pc1 <- c(rep(1, 10), rep(0, 90))
> pc1 <- pc1/norm(pc1, type = '2')
> 
> simulation_covariance <- 10 * pc1 %*% t(pc1)
> simulation_covariance <- simulation_covariance + diag(1, 100)
> 
> sample_1 <- data.frame(MASS::mvrnorm(sample_size_1,
+                                mu = true_mean_1,
+                                Sigma = simulation_covariance))
>  sample_2 <- data.frame(MASS::mvrnorm(sample_size_2,
+                                mu = true_mean_2,
+                                Sigma = simulation_covariance))
>  result <- debiased_pc_testing(sample_1, sample_2)
[1] "processiong fold 1"
 Fold  1  out of  5 
 Fold  2  out of  5 
 Fold  3  out of  5 
 Fold  4  out of  5 
 Fold  5  out of  5 

[1] 3.311111
12345678
[1] "processiong fold 2"
[1] 3.311111
1234567891011121314151617181920
[1] "processiong fold 3"
[1] 3.311111
12345678
[1] "processiong fold 4"
[1] 3.311111
12345678
[1] "processiong fold 5"
[1] 3.311111
123456789
     [,1]
[1,]    1
          [,1]
[1,] 0.9979824
          [,1]
[1,] 0.9978247
          [,1]
[1,] 0.9980911
          [,1]
[1,] 0.9982905
>  result$test_statistics
[1] 5.627882
>  ##these are test statistics. Each one of them corresponds to one PC.
>  summarize_pc_name(result, latent_fator_index = 1) #shows which features contribute to PC1
 [1] "X1"  "X10" "X19" "X2"  "X23" "X24" "X28" "X3"  "X37" "X4"  "X43" "X45"
[13] "X5"  "X51" "X56" "X58" "X6"  "X68" "X7"  "X71" "X8"  "X9"  "X91" "X94"
>  extract_pc(result) # extract the estimated leading PCs.
[[1]]
              pc1
X1   -0.347361456
X2   -0.321548229
X3   -0.318538571
X4   -0.327727552
X5   -0.324522176
X6   -0.325816816
X7   -0.302316558
X8   -0.311518365
X9   -0.298075373
X10  -0.275822620
X11   0.001060879
X12   0.000000000
X13   0.000000000
X14   0.005457994
X15   0.000000000
X16  -0.002058860
X17   0.000000000
X18   0.000000000
X19  -0.010055043
X20   0.000000000
X21   0.000000000
X22   0.000000000
X23   0.023347108
X24  -0.003645409
X25   0.000000000
X26   0.000000000
X27   0.000000000
X28   0.006311341
X29   0.000000000
X30   0.000000000
X31   0.000000000
X32   0.000000000
X33   0.000000000
X34   0.000000000
X35  -0.009709617
X36   0.000000000
X37  -0.007923347
X38   0.000000000
X39   0.000000000
X40   0.000000000
X41  -0.004218548
X42   0.000000000
X43   0.003752421
X44   0.000000000
X45   0.000000000
X46   0.000000000
X47   0.000000000
X48   0.000000000
X49   0.000000000
X50   0.000000000
X51   0.000000000
X52   0.000000000
X53   0.000000000
X54   0.000000000
X55   0.000000000
X56   0.000000000
X57   0.000000000
X58  -0.019775062
X59   0.006188145
X60  -0.023022947
X61   0.000000000
X62   0.004880407
X63   0.000000000
X64   0.000000000
X65   0.000000000
X66   0.000000000
X67   0.000000000
X68   0.005012189
X69   0.000000000
X70   0.000000000
X71   0.017188532
X72   0.000000000
X73   0.000000000
X74   0.000000000
X75   0.000000000
X76   0.000000000
X77   0.000000000
X78   0.000000000
X79   0.000000000
X80   0.000000000
X81   0.000000000
X82   0.000000000
X83   0.000000000
X84   0.000000000
X85   0.000000000
X86   0.000000000
X87   0.000000000
X88   0.000000000
X89   0.002856922
X90   0.000000000
X91   0.000000000
X92   0.000000000
X93   0.000000000
X94   0.000000000
X95   0.000000000
X96   0.001398634
X97   0.000000000
X98   0.000000000
X99   0.000000000
X100  0.000000000

[[2]]
               pc1
X1   -0.3393138844
X2   -0.3170870855
X3   -0.3141758450
X4   -0.3081689383
X5   -0.3420816261
X6   -0.3245193183
X7   -0.2996458821
X8   -0.3182030904
X9   -0.3056229640
X10  -0.2853287268
X11   0.0000000000
X12   0.0000000000
X13   0.0000000000
X14   0.0056611492
X15   0.0000000000
X16   0.0000000000
X17   0.0000000000
X18   0.0000000000
X19   0.0000000000
X20   0.0000000000
X21   0.0000000000
X22   0.0000000000
X23   0.0059605212
X24  -0.0028666569
X25   0.0000000000
X26   0.0000000000
X27   0.0008023345
X28   0.0124024080
X29   0.0000000000
X30   0.0000000000
X31   0.0000000000
X32   0.0000000000
X33   0.0000000000
X34   0.0000000000
X35   0.0000000000
X36   0.0000000000
X37  -0.0034283147
X38   0.0000000000
X39   0.0000000000
X40   0.0000000000
X41   0.0000000000
X42   0.0000000000
X43   0.0232124054
X44   0.0177832580
X45   0.0278041896
X46   0.0000000000
X47   0.0000000000
X48   0.0000000000
X49   0.0000000000
X50   0.0000000000
X51  -0.0036638926
X52   0.0000000000
X53   0.0000000000
X54   0.0000000000
X55   0.0000000000
X56   0.0118083460
X57   0.0000000000
X58  -0.0081871597
X59   0.0000000000
X60   0.0000000000
X61   0.0000000000
X62   0.0000000000
X63   0.0000000000
X64   0.0000000000
X65   0.0000000000
X66   0.0000000000
X67   0.0000000000
X68   0.0000000000
X69   0.0000000000
X70   0.0000000000
X71   0.0169743266
X72   0.0000000000
X73   0.0000000000
X74   0.0000000000
X75   0.0000000000
X76   0.0000000000
X77   0.0000000000
X78   0.0000000000
X79   0.0000000000
X80   0.0000000000
X81   0.0024462147
X82  -0.0025357746
X83  -0.0055087207
X84   0.0000000000
X85   0.0000000000
X86   0.0000000000
X87   0.0000000000
X88   0.0000000000
X89   0.0000000000
X90   0.0000000000
X91  -0.0059179914
X92   0.0000000000
X93   0.0000000000
X94   0.0000000000
X95   0.0000000000
X96   0.0000000000
X97   0.0000000000
X98   0.0000000000
X99   0.0000000000
X100  0.0000000000

[[3]]
               pc1
X1   -0.3295588691
X2   -0.3115979048
X3   -0.3191920385
X4   -0.3277867993
X5   -0.3392953856
X6   -0.3178506753
X7   -0.3119081544
X8   -0.3141561366
X9   -0.3089728487
X10  -0.2732425534
X11   0.0000000000
X12   0.0108793309
X13   0.0000000000
X14   0.0000000000
X15   0.0000000000
X16   0.0000000000
X17   0.0000000000
X18   0.0000000000
X19  -0.0057668251
X20   0.0000000000
X21   0.0000000000
X22   0.0000000000
X23   0.0000000000
X24  -0.0015737214
X25   0.0000000000
X26   0.0000000000
X27   0.0000000000
X28   0.0035721739
X29   0.0000000000
X30   0.0000000000
X31   0.0000000000
X32   0.0000000000
X33   0.0000000000
X34   0.0000000000
X35   0.0000000000
X36   0.0000000000
X37  -0.0078211765
X38   0.0000000000
X39   0.0000000000
X40   0.0000000000
X41   0.0000000000
X42   0.0000000000
X43   0.0000000000
X44   0.0060821474
X45   0.0092206342
X46   0.0000000000
X47   0.0000000000
X48   0.0000000000
X49   0.0000000000
X50   0.0000000000
X51  -0.0394391363
X52   0.0000000000
X53   0.0000000000
X54   0.0088454994
X55  -0.0058971464
X56   0.0000000000
X57   0.0000000000
X58  -0.0175427818
X59   0.0000000000
X60   0.0000000000
X61   0.0000000000
X62   0.0000000000
X63   0.0092037234
X64   0.0000000000
X65   0.0000000000
X66   0.0000000000
X67   0.0000000000
X68   0.0026032483
X69   0.0016540285
X70   0.0000000000
X71   0.0147131366
X72   0.0000000000
X73   0.0000000000
X74   0.0000000000
X75   0.0000000000
X76   0.0000000000
X77   0.0000000000
X78   0.0000000000
X79   0.0000000000
X80   0.0000000000
X81   0.0000000000
X82   0.0000000000
X83   0.0000000000
X84   0.0000000000
X85   0.0000000000
X86   0.0000000000
X87   0.0000000000
X88   0.0000000000
X89   0.0000000000
X90   0.0000000000
X91  -0.0047088906
X92   0.0000000000
X93   0.0000000000
X94  -0.0007172614
X95   0.0000000000
X96   0.0000000000
X97   0.0000000000
X98   0.0000000000
X99   0.0073088015
X100  0.0000000000

[[4]]
               pc1
X1   -0.3340923683
X2   -0.3049510061
X3   -0.3266054114
X4   -0.3185596755
X5   -0.3355663385
X6   -0.3105453872
X7   -0.3083810783
X8   -0.3227858638
X9   -0.3071186720
X10  -0.2874127339
X11   0.0000000000
X12   0.0088194248
X13   0.0000000000
X14   0.0000000000
X15   0.0000000000
X16   0.0000000000
X17   0.0018591962
X18   0.0000000000
X19  -0.0046124351
X20   0.0000000000
X21   0.0000000000
X22   0.0000000000
X23   0.0042245786
X24  -0.0036112119
X25   0.0000000000
X26   0.0000000000
X27   0.0000000000
X28   0.0054557058
X29   0.0000000000
X30   0.0000000000
X31   0.0000000000
X32   0.0000000000
X33   0.0000000000
X34   0.0000000000
X35   0.0000000000
X36   0.0000000000
X37   0.0000000000
X38   0.0022232637
X39   0.0000000000
X40   0.0000000000
X41   0.0000000000
X42   0.0000000000
X43   0.0007389463
X44   0.0000000000
X45   0.0130897124
X46   0.0000000000
X47   0.0000000000
X48   0.0000000000
X49   0.0000000000
X50   0.0000000000
X51  -0.0128675738
X52   0.0000000000
X53   0.0000000000
X54   0.0050216091
X55   0.0000000000
X56   0.0120373217
X57   0.0000000000
X58  -0.0025405074
X59   0.0000000000
X60   0.0000000000
X61   0.0000000000
X62   0.0114618704
X63   0.0000000000
X64   0.0000000000
X65   0.0000000000
X66   0.0039990601
X67   0.0000000000
X68   0.0063861564
X69   0.0000000000
X70   0.0000000000
X71   0.0285201943
X72   0.0000000000
X73   0.0000000000
X74   0.0000000000
X75   0.0000000000
X76   0.0000000000
X77   0.0000000000
X78   0.0000000000
X79   0.0000000000
X80   0.0000000000
X81   0.0000000000
X82   0.0000000000
X83  -0.0083973694
X84   0.0000000000
X85   0.0000000000
X86   0.0000000000
X87   0.0000000000
X88   0.0000000000
X89   0.0144623880
X90   0.0000000000
X91  -0.0019749235
X92   0.0000000000
X93   0.0000000000
X94  -0.0027890638
X95   0.0000000000
X96   0.0000000000
X97   0.0000000000
X98   0.0000000000
X99   0.0000000000
X100  0.0000000000

[[5]]
               pc1
X1   -0.3353728401
X2   -0.3204368232
X3   -0.3138886538
X4   -0.3285283790
X5   -0.3327183173
X6   -0.3064082625
X7   -0.3007978360
X8   -0.3133065324
X9   -0.3080425331
X10  -0.2970575455
X11   0.0154660292
X12   0.0000000000
X13   0.0000000000
X14   0.0000000000
X15   0.0000000000
X16   0.0000000000
X17   0.0000000000
X18   0.0000000000
X19  -0.0261706129
X20   0.0000000000
X21   0.0000000000
X22   0.0000000000
X23   0.0010748245
X24   0.0000000000
X25   0.0007151862
X26   0.0000000000
X27   0.0000000000
X28   0.0033189875
X29   0.0000000000
X30   0.0000000000
X31   0.0000000000
X32   0.0000000000
X33   0.0000000000
X34   0.0000000000
X35   0.0000000000
X36   0.0000000000
X37  -0.0056476544
X38   0.0000000000
X39   0.0000000000
X40   0.0000000000
X41   0.0000000000
X42   0.0000000000
X43   0.0064752183
X44   0.0000000000
X45   0.0041128289
X46   0.0000000000
X47  -0.0090545353
X48   0.0000000000
X49   0.0000000000
X50   0.0000000000
X51  -0.0046591326
X52   0.0000000000
X53  -0.0023472961
X54   0.0000000000
X55   0.0000000000
X56   0.0061384556
X57   0.0000000000
X58  -0.0144167471
X59   0.0000000000
X60   0.0000000000
X61   0.0000000000
X62   0.0000000000
X63   0.0030765246
X64   0.0000000000
X65   0.0000000000
X66   0.0000000000
X67   0.0000000000
X68   0.0000000000
X69   0.0000000000
X70  -0.0127944837
X71   0.0189920095
X72   0.0000000000
X73   0.0000000000
X74   0.0000000000
X75   0.0000000000
X76   0.0000000000
X77   0.0000000000
X78   0.0000000000
X79   0.0000000000
X80   0.0000000000
X81   0.0000000000
X82   0.0000000000
X83   0.0000000000
X84   0.0000000000
X85   0.0000000000
X86   0.0000000000
X87   0.0000000000
X88   0.0000000000
X89   0.0000000000
X90   0.0000000000
X91  -0.0028142730
X92  -0.0046482539
X93   0.0000000000
X94  -0.0053905237
X95   0.0000000000
X96   0.0000000000
X97   0.0000000000
X98   0.0000000000
X99   0.0072398799
X100  0.0000000000

>  
>  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("debiased_pc_testing", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  3.654 0.083 3.74 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')

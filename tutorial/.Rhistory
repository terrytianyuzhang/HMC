knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 6,
fig.height = 4
)
rm(list = ls())
library(data.table)
library(HMC)
set.seed(123)
# Load data
output_dir <- "/Users/tianyuzhang/Documents/HMC/tutorial/"
residual_subset <- readRDS(paste0(output_dir, "/data/tiny_cleary_for_HMC.rds"))
clustering <- readRDS(paste0(output_dir, "/data/gene_clustering_for_HMC.rds"))
# Subset to control and treatment groups, then remove guide labels
control <- residual_subset[Guides_collapsed_by_gene == "non-targeting",
!"Guides_collapsed_by_gene"]
perturbed <- residual_subset[Guides_collapsed_by_gene == "STAT1",
!"Guides_collapsed_by_gene"]
control[1:3, 1:5]
perturbed[1:3, 1:5]
control_subset <- control[, -(1:1800)]
perturbed_subset <- perturbed[, -(1:1800)]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
which(clustering$cluster_index == 31)
gene_to_keep <- which(clustering$cluster_index == 31)
control_subset <- control[, gene_to_keep]
perturbed_subset <- perturbed[, gene_to_keep]
gene_to_keep <- which(clustering$cluster_index == 31)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
control_subset
gene_to_keep
gene_to_keep <- which(clustering$cluster_index == 31)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
dim(gene_to_keep)
length(gene_to_keep)
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "sparse_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
rm(list = ls())
set.seed(124)
library(glue)
library(data.table)
library(grpreg)
library(HMC)
data_directory <- '/raid6/Tianyu/convergence_risk_gene/try_Cleary_data/'
work_directory <- '/raid6/Tianyu/SingleCell/cleary_data_mean_comparison/'
batch_name <- '01_small_scale'
# data_directory <- '/Users/tianyuzhang/Documents/convergence_risk_gene/try_Cleary_data/'
# work_directory <- '/Users/tianyuzhang/Documents/SingleCell/code_paper/cleary_data_mean_comparison/'
source(glue('{data_directory}R/convergence.R'))
# Clear workspace and load required library
rm(list = ls())
library(data.table)
# Define directories
data_dir <- "/Users/tianyuzhang/Documents/convergence_risk_gene/try_Cleary_data/"
output_dir <- "/Users/tianyuzhang/Documents/HMC/tutorial/"
input_data_path <- paste0(data_dir, "data/")
intermediate_path <- paste0(input_data_path, "intermediate_data/")
# Load gene clustering info
clustering_path <- paste0(input_data_path, "module_list_df_2000_genes.csv")
clustering <- fread(clustering_path)
clustering[, gene_name := gsub("\\.", "-", gene_name)]
# Identify and remove mitochondrial genes (cluster 42)
mt_genes <- clustering[cluster_index == 42, gene_name]
clustering <- clustering[cluster_index != 42]
# Load residual expression matrix
resid_path <- paste0(intermediate_path, "residual_matrix_small.rds")
residual_subset <- readRDS(resid_path)
residual_subset <- data.table(residual_subset)[, -c("ID", "Cell_cycle_phase")]
# Standardize column names
setnames(residual_subset, gsub("\\.", "-", names(residual_subset)))
# Remove mitochondrial genes
residual_subset <- residual_subset[, !..mt_genes]
cat("Residual matrix after removing mt genes:", dim(residual_subset), "\n")
# Subsample 500 non-targeting cells
control_cells <- which(residual_subset$Guides_collapsed_by_gene == "non-targeting")
n_control <- 500
set.seed(2)
remove_idx <- sample(control_cells, length(control_cells) - n_control)
residual_subset <- residual_subset[-remove_idx]
cat("Residual matrix after subsampling controls:", dim(residual_subset), "\n")
# Check distribution of guide groups
print(table(residual_subset$Guides_collapsed_by_gene))
# Save cleaned dataset and gene clustering
saveRDS(residual_subset, file = paste0(output_dir, "/data/tiny_cleary_for_HMC.rds"))
saveRDS(clustering, file = paste0(output_dir, "/data/gene_clustering_for_HMC.rds"))
rm(list = ls())
library(data.table)
library(HMC)
set.seed(123)
# Load data
output_dir <- "/Users/tianyuzhang/Documents/HMC/tutorial/"
residual_subset <- readRDS(paste0(output_dir, "/data/tiny_cleary_for_HMC.rds"))
clustering <- readRDS(paste0(output_dir, "/data/gene_clustering_for_HMC.rds"))
# Subset to control and treatment groups, then remove guide labels
control <- residual_subset[Guides_collapsed_by_gene == "non-targeting",
!"Guides_collapsed_by_gene"]
perturbed <- residual_subset[Guides_collapsed_by_gene == "STAT1",
!"Guides_collapsed_by_gene"]
control[1:3, 1:5]
perturbed[1:3, 1:5]
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 10)
test_result$p_value
summarize_feature_name(test_result)
summarize_feature_name(test_result$fold_data)
?summarize_feature_name
summarize_feature_name(test_result)
# Clear workspace and load required library
rm(list = ls())
library(data.table)
# Define directories
data_dir <- "/Users/tianyuzhang/Documents/convergence_risk_gene/try_Cleary_data/"
output_dir <- "/Users/tianyuzhang/Documents/HMC/tutorial/"
input_data_path <- paste0(data_dir, "data/")
intermediate_path <- paste0(input_data_path, "intermediate_data/")
# Load gene clustering info
clustering_path <- paste0(input_data_path, "module_list_df_2000_genes.csv")
clustering <- fread(clustering_path)
clustering[, gene_name := gsub("\\.", "-", gene_name)]
# Identify and remove mitochondrial genes (cluster 42)
mt_genes <- clustering[cluster_index == 42, gene_name]
clustering <- clustering[cluster_index != 42]
# Load residual expression matrix
resid_path <- paste0(intermediate_path, "residual_matrix_small.rds")
residual_subset <- readRDS(resid_path)
residual_subset <- data.table(residual_subset)[, -c("ID", "Cell_cycle_phase")]
# Standardize column names
setnames(residual_subset, gsub("\\.", "-", names(residual_subset)))
# Remove mitochondrial genes
residual_subset <- residual_subset[, !..mt_genes]
cat("Residual matrix after removing mt genes:", dim(residual_subset), "\n")
# Subsample 500 non-targeting cells
control_cells <- which(residual_subset$Guides_collapsed_by_gene == "non-targeting")
n_control <- 1000
set.seed(2)
remove_idx <- sample(control_cells, length(control_cells) - n_control)
residual_subset <- residual_subset[-remove_idx]
cat("Residual matrix after subsampling controls:", dim(residual_subset), "\n")
# Check distribution of guide groups
print(table(residual_subset$Guides_collapsed_by_gene))
# Save cleaned dataset and gene clustering
saveRDS(residual_subset, file = paste0(output_dir, "/data/tiny_cleary_for_HMC.rds"))
saveRDS(clustering, file = paste0(output_dir, "/data/gene_clustering_for_HMC.rds"))
rm(list = ls())
library(data.table)
library(HMC)
set.seed(123)
# Load data
output_dir <- "/Users/tianyuzhang/Documents/HMC/tutorial/"
residual_subset <- readRDS(paste0(output_dir, "/data/tiny_cleary_for_HMC.rds"))
clustering <- readRDS(paste0(output_dir, "/data/gene_clustering_for_HMC.rds"))
# Subset to control and treatment groups, then remove guide labels
control <- residual_subset[Guides_collapsed_by_gene == "non-targeting",
!"Guides_collapsed_by_gene"]
perturbed <- residual_subset[Guides_collapsed_by_gene == "STAT1",
!"Guides_collapsed_by_gene"]
control[1:3, 1:5]
perturbed[1:3, 1:5]
gene_to_keep <- which(clustering$cluster_index >= 30)
control_subset <- control[, ..gene_to_keep]
perturbed_subset <- perturbed[, ..gene_to_keep]
test_result <- mean_comparison_anchor(
control = control_subset,
treatment = perturbed_subset,
pca_method = "dense_pca",
classifier_method = "lasso",
n_folds = 5)
test_resul
test_result$p_value
summarize_feature_name(test_result)
